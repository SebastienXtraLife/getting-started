name: Docker Build
# run-name: ${{ github.actor }} triggered Docker Build workflow by pushing tag ${{ github.ref_name }}
run-name: ${{ github.actor }} triggered Docker Build workflow by creating release ${{ github.ref_name }}

on:
  # push:
  #   tags:
  #     - v**
  release:
    types: [created]

jobs:
  # yarn_cache:   # not needed as the setup-node@v3 action will handle this by itself (+ cache not preserved between tags anyway)
  #   name: Yarn Cache
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
  #     - name: Restore yarn cache
  #       id: yarn-cache   # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
  #       uses: actions/cache@v3
  #       with: Check Yarn cache directory path
  #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}   # app's yarn lockfile is located here: app/yarn.lock
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-

  # install_test:   # disable this job as tests are failing for now
  #   name: Install + Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checking out repository
  #       uses: actions/checkout@v3
  #     - name: Setting up Node
  #       uses: actions/setup-node@v3
  #       with:
  #         cache: yarn   # doesn't cache the node_modules folder though
  #         cache-dependency-path: yarn.lock
  #         node-version: 18
  #     - name: Installing dependencies
  #       run: |
  #         cd app
  #         yarn install --frozen-lockfile   # --immutable instead of --frozen-lockfile if using Yarn 2 ; npm equivalent command: npm ci
  #     - name: Testing app
  #       run: yarn test

  push_npm:
    name: Push NPM
    # needs: Test   # disable this requirement as tests are failing for now (permission denied to create folders while testing)
    runs-on: ubuntu-latest
    steps:
      - name: Checking out repository
        uses: actions/checkout@v3
      - name: Setting up Node
        uses: actions/setup-node@v3
        with:
          always-auth: true
          cache: yarn   # doesn't cache the node_modules folder though
          cache-dependency-path: yarn.lock
          node-version: 18
          registry-url: https://registry.npmjs.org
      - name: Pushing package
        run: |
          yarn install --frozen-lockfile   # --immutable instead of --frozen-lockfile if using Yarn 2 ; npm equivalent command: npm ci
          yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}   # secrets.GITHUB_TOKEN

  build_push_docker:
    name: Build/Push Docker
    # needs: Test   # disable this requirement as tests are failing for now (permission denied to create folders while testing)
    runs-on: ubuntu-latest
    steps:
      # - name: Checking out repository
      #   uses: actions/checkout@v3   # no need to checkout as the build-push-action@v3 action will care about that
      # - name: Setting up Docker QEMU
      #   uses: docker/setup-qemu-action@v2   # add support for more platforms with QEMU (optional): https://github.com/docker/setup-qemu-action
      - name: Setting up Docker Buildx
        uses: docker/setup-buildx-action@v2   # add support for cache and building multi-platforms images (optional)
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}   # safer to use a personal access token instead of a password: https://docs.docker.com/docker-hub/access-tokens/
      - name: Building & pushing Docker image
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ vars.DOCKER_HUB_IMAGE }}:${{ github.ref_name }}
